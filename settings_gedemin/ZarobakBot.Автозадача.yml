%YAML 1.1
--- 
StructureVersion: "1.0"
Properties: 
  RUID: 1173045327_1450749196
  Name: "ZarobakBot.Автозадача"
  Caption: "ZarobakBot.Автозадача"
  Version: "1.0.0.6"
  Optional: False
  Internal: True
  MD5: 99DACFA4A115549B57BB5CE91A68705F
Uses: 
  - "1193786287_1320926324 ZarobakBot.Экспорт файлов"
  - "158513268_1444931844 ZarobakBot.Сбор данных"
  - "1173065484_1450749196 ZarobakBot.Экспорт данных по признакам"
Objects: 
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1173045311_1450749196
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1173045324_1450749196
    Fields: 
      NAME: "bot_task"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2020-07-10T13:04:23+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PREPAREDBYPARSER: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-07-08T14:57:29+03:00
      DISPLAYSCRIPT: | 
        BOT_TASK
        
      ENTEREDPARAMS: ~
      SCRIPT: | 
        '#include BOT_GETSERVERDATA
        '#include BOT_EXPORTPAYSLIPSU
        '#include BOT_EXPORTEMPLOYEESU
        '#include BOT_EXPORTACCDEDSU
        '#include BOT_EXPORTTIMESHEETSU
        Option Explicit
        Function bot_task()
          const upload_employees = "/zarobak/v1/upload_employees"
          const upload_accDedRefs = "/zarobak/v1/upload_accDedRefs"
          const upload_paySlips = "/zarobak/v1/upload_paySlips"
          const upload_timeSheets = "/zarobak/v2/upload_timeSheets"
        
          dim customerArray, URL, count
          'Из констант получим параметры для отправки на сервер
          'customerArray - массив данных по клиенту (ид и RUID организации, пример: ("id1,123_456", "id2,789_123"))
          'URL - путь к серверу
          call bot_GetServerData(false, customerArray, URL)
        
          count = UBound(customerArray)
          if count < 0 or URL = "" then
            exit function
          end if
          
          dim Creator
          set Creator = new TCreator
          
          dim qField, strPrint
          set qField = Creator.GetObject(nil, "TIBSQL", "")
          qField.Transaction = gdcBaseManager.ReadTransaction
          qField.SQL.Text = _
            "  SELECT FIRST 1 f.FIELDNAME " & _
            "  FROM AT_RELATION_FIELDS f " & _
            "  WHERE f.RELATIONNAME = 'USR$WG_TOTAL' AND f.FIELDNAME = 'USR$PRINTPAYILIP' "
          qField.ExecQuery
          
          if not qField.eof then
            strPrint = " OR t.USR$PRINTPAYILIP = 1 "
          end if
          
          dim Period, qSel
          set qSel = Creator.GetObject(nil, "TIBSQL", "")
          qSel.Transaction = gdcBaseManager.ReadTransaction
          qSel.SQL.Text = _
            "  SELECT FIRST 1 t.USR$DATEBEGIN, t.USR$DATEEND " & _
            "  FROM USR$WG_TOTAL t " & _
            "  LEFT JOIN GD_DOCUMENT doc ON doc.ID = t.DOCUMENTKEY " & _
            "  WHERE (t.USR$BLOCKED = 1  " & strPrint & ") " &  _
            "    AND doc.COMPANYKEY = :companyId " & _
            "  ORDER BY USR$DATEBEGIN DESC "
        
          dim i, customer, customerId, companyId
          dim P : set P = Creator.GetObject(nil, "TgdccProgress", "")
          P.StartWork "ZarobakBot", "Экспорт данных", 4*(count+1), True, True
        
          for i = 0 to count
            customer = Split(customerArray(i), ",")
            customerId = customer(0)
            companyId = gdcBaseManager.GetIDByRUIDString(customer(1))
            
            qSel.Close
            qSel.ParamByName("companyId").AsInteger = companyId
            qSel.ExecQuery
            
            if not qSel.eof then
              Period = Array(qSel.FieldByName("USR$DATEBEGIN").AsDateTime, qSel.FieldByName("USR$DATEEND").AsDateTime)
        
              P.StartStep "Виды начислений " & customerId, 1
              if not bot_exportAccDedsU(customerId, URL & upload_accDedRefs, false) then
                P.EndWork "Экспорт остановлен!", False
                exit function
              end if
        
              P.StartStep "Сотрудники " & customerId, 1
              if not bot_exportEmployeesU(customerId, companyId, URL & upload_employees, false) then
                P.EndWork "Экспорт остановлен!", False
                exit function
              end if
        
              P.StartStep "Расчетные листки " & customerId, 1
              if not bot_exportPaySlipsU(Period, customerId, companyId, URL & upload_paySlips, false, false) then
                P.EndWork "Экспорт остановлен!", False
                exit function
              end if
              
              P.StartStep "Табеля " & customerId, 1
              if not bot_exportTimeSheetsU(Period, customerId, companyId, URL & upload_timeSheets, false) then
                P.EndWork "Экспорт остановлен!", False
                exit function
              end if
            end if
          next
        
          P.EndWork "Экспорт выполнен!", False
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "158512755_1444931844 bot_getServerData"
          - 
            ADDFUNCTIONKEY: "158513035_1444931844 bot_exportPaySlipsU"
          - 
            ADDFUNCTIONKEY: "158513034_1444931844 bot_exportEmployeesU"
          - 
            ADDFUNCTIONKEY: "158513032_1444931844 bot_exportAccDedsU"
          - 
            ADDFUNCTIONKEY: "1173044690_1450749196 bot_exportTimeSheetsU"
  - 
    Properties: 
      Class: "TgdcAutoTask"
      RUID: 1173045324_1450749196
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "ZarobakBot"
      ATSTARTUP: ~
      AUTOTRKEY: ~
      BACKUPFILE: ~
      CMDLINE: ~
      COMPUTER: ~
      DAILY: 1
      DESCRIPTION: ~
      EMAILEXPORTTYPE: ~
      EMAILGROUPKEY: ~
      EMAILRECIPIENTS: ~
      EMAILSMTPKEY: ~
      ENDTIME: 1899-12-30T23:59:59+03:00
      EXACTDATE: ~
      FUNCTIONKEY: "1173045311_1450749196 bot_task"
      MONTHLY: ~
      PRIORITY: 0
      PULSE: ~
      RELOAD: 0
      REPORTKEY: ~
      STARTTIME: 1899-12-30T23:00:00+03:00
      USERKEY: ~
      WEEKLY: ~
      CREATIONDATE: 2020-07-08T14:08:32+03:00
      EDITIONDATE: 2020-07-08T14:35:44+03:00
      DISABLED: 1
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1173098158_1450749196
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1173100413_1450749196
    Fields: 
      NAME: "bot_prepareMenu"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2020-07-23T17:05:20+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PREPAREDBYPARSER: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-07-23T17:05:18+03:00
      DISPLAYSCRIPT: | 
        BOT_PREPAREMENU
        BOT_PREPAREMENU_ROLLBACK
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QKAAAAQ1VTVE9NRVJJRAoAAABDVVNUT01FUklEAAAAAAAAAAAAAAAABQAAAAAAAAAA
        AAAAAEZOU1RQUlNUCQAAAENPTVBBTllJRAkAAABDT01QQU5ZSUQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QFAAAAUERBVEUFAAAAUERBVEUAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAA
        Rk5TVFBSU1QEAAAASlNPTgQAAABKU09OAAAAAAAAAAAAAAAABQAAAAAAAAAAAAAAAEZOU1RGTFBS
      SCRIPT: | 
        '#include BOT_STRREPL
        Option Explicit
        Function bot_prepareMenu(customerId, companyId, pDate, ByRef Json)
          dim Creator, Transaction
          set Creator = new TCreator
          set Transaction = Creator.GetObject(nil, "TIBTransaction", "")
          Transaction.Defaultdatabase = IBLogin.Database
          if not Transaction.InTransaction then
            Transaction.StartTransaction
          end if
        
          except bot_prepareMenu_RollBack(Transaction)
        
          dim qSel
          set qSel = Creator.GetObject(nil, "TIBSQL", "")
          qSel.Transaction = Transaction
          qSel.SQL.Text = _
            " SELECT " & _
            "   con.name || ' -- ' || mn.usr$name  as menuname, " & _
            "   con.id || mn.id as menuid, " & _
            "   gg.USR$NUMBERSORT as n, " & _
            "   gg.name as groupname, " & _
            "   g.name as goodname, " & _
            "   mc.usr$outputstr as det, " & _
            "   ml.usr$cost as cost " & _
            " FROM usr$mn_menu mm " & _
            " LEFT JOIN usr$mn_menuline ml on mm.documentkey = ml.masterkey " & _
            " LEFT JOIN gd_good g on g.id = ml.usr$goodkey " & _
            " LEFT JOIN usr$mn_calccard mc on mc.documentkey = ml.usr$cardkey " & _
            " LEFT JOIN GD_GOODGROUP gg on gg.id = g.groupkey " & _
            " JOIN usr$mn_menuname mn on mm.usr$menunamekey = mn.id " & _
            " JOIN gd_contact con on mm.usr$depotkey = con.id " & _
            " JOIN GD_DOCUMENT doc ON doc.id = mm.documentkey " & _
            " WHERE (doc.documentdate <= :pDate AND mm.usr$todate >= :pDate) and doc.companykey = :companyId " & _
            " ORDER BY con.name, mn.usr$name, gg.USR$NUMBERSORT, gg.name, mc.usr$posinmenu, g_s_delchar(g.alias) "
          qSel.ParamByName("companyId").AsInteger = companyId
          qSel.ParamByName("pDate").AsDateTime = pDate
          qSel.ExecQuery
        
          dim  name, str, groupname, strgroup, n, id
          name = ""
          groupname = ""
          while not qSel.eof
            if (name <> qSel.FieldByName("menuname").AsString and name <> "") then
              if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & ","
              Json.Add("{""id"":""" & id & """," & _
                """name"":{""ru"":"""  & bot_strRepl(name) & """}," & _
                """data"":[" & strgroup & "]}")
              strgroup = ""
            end if
            if groupname <> qSel.FieldByName("groupname").AsString and groupname <> "" then
              if strgroup <> "" then strgroup = strgroup & ","
              strgroup = strgroup & "{""group"":{""ru"":""" & bot_strRepl(groupname) & """}," & _
                """n"":" & n & "," & _
                """groupdata"":[" & str & "]}"
                str = ""
            end if
            if str <> "" then str = str & ","
            str = str & "{""good"":{""ru"":""" & bot_strRepl(qSel.FieldByName("goodname").AsString) & """}," & _
              """det"":""" &  bot_strRepl(qSel.FieldByName("det").AsString) & """," & _
              """cost"":" & Replace(qSel.FieldByName("cost").AsCurrency, ",", ".") & "}"
            name = qSel.FieldByName("menuname").AsString
            groupname = qSel.FieldByName("groupname").AsString
            n = qSel.FieldByName("n").AsString
            id = qSel.FieldByName("menuid").AsString
            qSel.Next
          wend
          
          if (name <> "") then
            if Json.Count > 0 then Json.Strings(Json.Count - 1) = Json.Strings(Json.Count - 1) & ","
            Json.Add("{""id"":""" & id & """," & _
              """name"": {""ru"":"""  & bot_strRepl(name) & """}," & _
              """data"":[" & strgroup & "]}")
          end if
          
          Json.Text = "{" & _
            """version"":""2.0""," & _
            """customerId"":""" & customerId & """," & _
            """date"":""" & Year(pDate) & "." & Right("0" & Month(pDate), 2) & "." & Right("0" & Day(pDate), 2) & """," & _
            """objData"":[" & Json.Text & "]" & _
            "}"
        
          if Transaction.InTransaction then
            Transaction.Commit
          end if
        End Function
        
        sub bot_prepareMenu_RollBack(Transaction)
          if Transaction.InTransaction then
            Transaction.Rollback
          end if
        end sub
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "147160790_1454092899 bot_strRepl"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1173100409_1450749196
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1173100413_1450749196
    Fields: 
      NAME: "bot_exportMenuU"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2020-07-14T17:09:22+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PREPAREDBYPARSER: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-07-14T17:09:22+03:00
      DISPLAYSCRIPT: | 
        BOT_EXPORTMENUU
        
      ENTEREDPARAMS: !!binary > 
        U0xQUlBSU1QKAAAAQ1VTVE9NRVJJRAoAAABDVVNUT01FUklEAAAAAAAAAAAAAAAABQAAAAAAAAAA
        AAAAAEZOU1RQUlNUCQAAAENPTVBBTllJRAkAAABDT01QQU5ZSUQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARk5TVFBSU1QDAAAAVVJMAwAAAFVSTAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAABGTlNU
        UFJTVAUAAABQREFURQUAAABQREFURQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGTlNURkxQUg==
      SCRIPT: | 
        '#include BOT_PREPAREMENU
        '#include BOT_SENDFILE
        Option Explicit
        Function bot_exportMenuU(customerId, companyId, URL, pDate)
          dim Json, Creator
          set Creator = new TCreator
          set Json = Creator.GetObject(nil, "TStringList", "")
          'Формирование Json файла с меню
          call bot_PrepareMenu(customerId, companyId, pDate, Json)
          'Отправка на сервер
          bot_exportMenuU = bot_SendFile(Json.Text, URL)
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1173098158_1450749196 bot_prepareMenu"
          - 
            ADDFUNCTIONKEY: "1193785048_1320926324 bot_SendFile"
  - 
    Properties: 
      Class: "TgdcFunction"
      RUID: 1173100410_1450749196
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
      HeadObject: 1173100413_1450749196
    Fields: 
      NAME: "bot_exportMenus"
      COMMENT: ~
      EVENT: ~
      FUNCTIONTYPE: ~
      GROUPNAME: ~
      INHERITEDRULE: 0
      LANGUAGE: "VBScript"
      LOCALNAME: ~
      MODIFYDATE: 2020-07-23T16:56:19+03:00
      MODULE: "UNKNOWN"
      MODULECODE: "1010001_17 APPLICATION"
      OBJECTNAME: "APPLICATION"
      OWNERNAME: ~
      PREPAREDBYPARSER: ~
      PUBLICFUNCTION: 1
      SHORTCUT: ~
      USEDEBUGINFO: ~
      EDITIONDATE: 2020-07-23T16:56:18+03:00
      DISPLAYSCRIPT: | 
        BOT_EXPORTMENUS
        
      ENTEREDPARAMS: ~
      SCRIPT: | 
        '#include BOT_EXPORTMENUU
        '#include BOT_GETSERVERDATA
        Option Explicit
        Function bot_exportMenus
          const upload_menu = "/zarobak/v2/upload_canteenmenu"
        
          dim customerArray, URL, count
          'Из констант получим параметры для отправки на сервер
          'customerArray - массив данных по клиенту (ид и RUID организации, пример: ("id1,123_456", "id2,789_123"))
          'URL - путь к серверу
          call bot_GetServerData(false, customerArray, URL)
        
          count = UBound(customerArray)
          if count < 0 or URL = "" then
            exit function
          end if
        
          dim Creator, i, customer, customerId, companyId
          set Creator = new TCreator
          dim P : set P = Creator.GetObject(nil, "TgdccProgress", "")
          P.StartWork "ZarobakBot", "Экспорт данных", 1*(count+1), True, True
        
          for i = 0 to count
            customer = Split(customerArray(i), ",")
            customerId = customer(0)
            companyId = gdcBaseManager.GetIDByRUIDString(customer(1))
        
            P.StartStep "Меню " & customerId, 1
            if not bot_exportMenuU(customerId, companyId, URL & upload_menu, Date()) then
              P.EndWork "Экспорт остановлен!", False
              exit function
            end if
          next
        
          P.EndWork "Экспорт выполнен!", False
        End Function
        
    Set: 
      - 
        Table: "RP_ADDITIONALFUNCTION"
        Items: 
          - 
            ADDFUNCTIONKEY: "1173100409_1450749196 bot_exportMenuU"
          - 
            ADDFUNCTIONKEY: "158512755_1444931844 bot_getServerData"
  - 
    Properties: 
      Class: "TgdcAutoTask"
      RUID: 1173100413_1450749196
      AlwaysOverwrite: False
      DontRemove: False
      IncludeSiblings: False
    Fields: 
      NAME: "ZarobakBot Canteen menu"
      ATSTARTUP: ~
      AUTOTRKEY: ~
      BACKUPFILE: ~
      CMDLINE: ~
      COMPUTER: ~
      DAILY: 1
      DESCRIPTION: ~
      EMAILEXPORTTYPE: ~
      EMAILGROUPKEY: ~
      EMAILRECIPIENTS: ~
      EMAILSMTPKEY: ~
      ENDTIME: 1899-12-30T23:59:59+03:00
      EXACTDATE: ~
      FUNCTIONKEY: "1173100410_1450749196 bot_exportMenus"
      MONTHLY: ~
      PRIORITY: 0
      PULSE: ~
      RELOAD: 0
      REPORTKEY: ~
      STARTTIME: 1899-12-30T23:00:00+03:00
      USERKEY: ~
      WEEKLY: ~
      CREATIONDATE: 2020-07-23T16:51:44+03:00
      EDITIONDATE: 2020-07-23T17:02:16+03:00
      DISABLED: 1