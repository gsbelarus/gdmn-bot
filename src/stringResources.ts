import { IDate, ICurrencyRate } from "./types";
import { date2str } from "./util/utils";

type FormatFunc = (...args: any[]) => string;

export interface ILocString {
  en: string | null | FormatFunc;
  ru: string | null | FormatFunc;
  be: string | null | FormatFunc;
};

export const stringResources = {
  askCompanyName: {
    en: 'Hi!\n\nTo receive payslips you need to sign up.\n\nEnter your company or organization name.',
    ru: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–Ω—ã—Ö –ª–∏—Å—Ç–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è –∏–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.',
    be: '–ü—Ä—ã–≤—ñ—Ç–∞–Ω–Ω–µ!\n\n–î–ª—è –∞—Ç—Ä—ã–º–∞–Ω–Ω—è —Ä–∞–∑–ª—ñ–∫–æ–≤—ã—Ö –ª—ñ—Å—Ç–∫–æ—û –Ω–µ–∞–±—Ö–æ–¥–Ω–∞ –∑–∞—Ä—ç–≥—ñ—Å—Ç—Ä–∞–≤–∞—Ü—Ü–∞.\n\n–£–≤—è–¥–∑—ñ—Ü–µ –Ω–∞–∑–≤—É –≤–∞—à–∞–≥–∞ –ø—Ä–∞–¥–ø—Ä—ã–µ–º—Å—Ç–≤–∞ –∞–ª—å–±–æ –∞—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ã—ñ.'
  },
  askPIN: {
    en: (d: Date) => `Enter PIN code from your payslip of ${d.toLocaleString('en-US', { month: 'long' })} ${d.getFullYear()}.`,
    ru: (d: Date) => `–í–≤–µ–¥–∏—Ç–µ –ü–ò–ù –∫–æ–¥ –∏–∑ —Å–≤–æ–µ–≥–æ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∫–∞ –∑–∞ ${d.toLocaleString('ru', { month: 'long' })} ${d.getFullYear()}.`,
    be: (d: Date) => `–£–≤—è–¥–∑—ñ—Ü–µ –ü–Ü–ù –∫–æ–¥ –∑ —Å–≤–∞–π–≥–æ —Ä–∞–∑–ªi–∫–æ–≤–∞–≥–∞ –ªic—Ç–∫–∞ –∑–∞ ${d.toLocaleString('be', { month: 'long' })} ${d.getFullYear()}.`
  },
  invalidPIN: {
    en: (d: Date) => `Invalid PIN code!\n\nCheck PIN code from your payslip of ${d.toLocaleString('en-US', { month: 'long' })} ${d.getFullYear()} and repeat the enter.`,
    ru: (d: Date) => `–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ü–ò–ù –∫–æ–¥!\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –í—ã —É–∫–∞–∑–∞–ª–∏ –ü–ò–ù –∫–æ–¥ –∏–∑ —Å–≤–æ–µ–≥–æ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∫–∞ –∑–∞ ${d.toLocaleString('ru', { month: 'long' })} ${d.getFullYear()} –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.`,
    be: (d: Date) => `–ù—è–≤–µ—Ä–Ω—ã –ü–Ü–ù –∫–æ–¥!\n\n–ü—Ä–∞–≤–µ—Ä—Ü–µ, —Ü—ñ –¥–∞–∫–ª–∞–¥–Ω–∞ –í—ã —û–∫–∞–∑–∞–ª—ñ –ü–Ü–ù –∫–æ–¥ –∑ —Å–≤–∞–π–≥–æ —Ä–∞–∑–ªi–∫–æ–≤–∞–≥–∞ –ªic—Ç–∫–∞ –∑–∞ ${d.toLocaleString('be', { month: 'long' })} ${d.getFullYear()} —ñ –ø–∞—û—Ç–∞—Ä—ã—Ü–µ —û–≤–æ–¥.`
  },
  unknownCompanyName: {
    en: 'We can\'t find a company or organization with such name.\n\nApparently you have made a typo while entering the name or your company doesn\'t use system "Gedemin: Payroll calculation".\n\nTry again.',
    ru: '–ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –∏–ª–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º.\n\n–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –æ—à–∏–±–ª–∏—Å—å –ø—Ä–∏ –≤–≤–æ–¥–µ –∏–ª–∏ –≤–∞—à–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º—É "–ì–µ–¥—ã–º–∏–Ω: –†–∞—Å—á–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã".\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —Ä–∞–∑.',
    be: '–ú—ã –Ω—è –º–æ–∂–∞–º –∑–Ω–∞–π—Å—Ü—ñ –ø—Ä–∞–¥–ø—Ä—ã–µ–º—Å—Ç–≤–∞ –∞–ª—å–±–æ –∞—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ã—é –∑ —Ç–∞–∫–æ–π –Ω–∞–∑–≤–∞–π.\n\n–ú–∞–≥—á—ã–º–∞ –í—ã –ø–∞–º—ã–ª—ñ–ª—ñ—Å—è –ø—Ä—ã —û–≤–æ–¥–∑–µ, –∞–ª—å–±–æ –≤–∞—à–∞–µ –ø—Ä–∞–¥–ø—Ä—ã–µ–º—Å—Ç–≤–∞ –Ω–µ –≤—ã–∫–∞—Ä—ã—Å—Ç–æ—û–≤–∞–µ —Å—ñ—Å—Ç—ç–º—É "–ì–µ–¥—ã–º—ñ–Ω: –†–∞–∑–ª—ñ–∫ –∑–∞—Ä–æ–±–∫—É".\n\n–ü–∞—Å–ø—Ä–∞–±—É–π—Ü–µ —è—à—á—ç —Ä–∞–∑.'
  },
  unknownEmployee: {
    en: 'We can\'t find an employee with such personal identification umber.\n\nCheck the data and repeat the enter.',
    ru: '–ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —Ç–∞–∫–∏–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º.\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –í—ã —É–∫–∞–∑–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.',
    be: '–ú—ã –Ω—è –º–æ–∂–∞–º –∑–Ω–∞–π—Å—Ü—ñ —Å—É–ø—Ä–∞—Ü–æ—û–Ω—ñ–∫–∞ –∑ —Ç–∞–∫—ñ–º —ñ–¥—ç–Ω—Ç—ã—Ñ—ñ–∫–∞—Ü—ã–π–Ω—ã–º –Ω—É–º–∞—Ä–∞–º.\n\n–ü—Ä–∞–≤–µ—Ä—Ü–µ, —Ü—ñ –¥–∞–∫–ª–∞–¥–Ω–∞ –í—ã —û–∫–∞–∑–∞–ª—ñ –¥–∞–¥–∑–µ–Ω—ã—è —ñ –ø–∞—û—Ç–∞—Ä—ã—Ü–µ —û–≤–æ–¥.'
  },
  askPersonalNumber: {
    en: 'Enter your personal identification number from passport.',
    ru: '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∏–∑ –ø–∞—Å–ø–æ—Ä—Ç–∞.',
    be: '–£–≤—è–¥–∑—ñ—Ü–µ —Å–≤–æ–π –ø–µ—Ä—Å–∞–Ω–∞–ª—å–Ω—ã —ñ–¥—ç–Ω—Ç—ã—Ñ—ñ–∫–∞—Ü—ã–π–Ω—ã –Ω—É–º–∞—Ä –∑ –ø–∞—à–ø–∞—Ä—Ç—É.'
  },
  mainMenuCaption: {
    en: 'Select a command from the menu.',
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é.',
    be: '–í—ã–±—è—Ä—ã—Ü–µ –∫–∞–º–∞–Ω–¥—É –∑ –º–µ–Ω—é.'
  },
  goodbye: {
    en: 'Good-bye! Thank you for being with us.\n\nTo begin new registration enter /start command.',
    ru: '–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –±—ã–ª–∏ —Å –Ω–∞–º–∏.\n\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤–≤–µ–¥–∏—Ç–µ\n–∫–æ–º–∞–Ω–¥—É /start',
    be: '–î–∞ –ø–∞–±–∞—á—ç–Ω–Ω—è! –î–∑—è–∫—É–π, —à—Ç–æ –±—ã–ª—ñ –∑ –Ω–∞–º—ñ.\n\n–ö–∞–± —Ä–∞—Å–ø–∞—á–∞—Ü—å –Ω–æ–≤—É—é —Ä—ç–≥—ñ—Å—Ç—Ä–∞—Ü—ã—é —û–≤—è–¥–∑—ñ—Ü–µ\n–∫–∞–º–∞–Ω–¥—É /start'
  },
  noData: {
    en: 'üòï There is no data for selected period!',
    ru: 'üòï –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥!',
    be: 'üòï –ù—è–º–∞ –¥–∞–¥–∑–µ–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω—ã –ø–µ—Ä—ã—è–¥!'
  },
  weAreLost: {
    en: 'üòï Sorry! I\'m lost a little bit. Please, start it over.',
    ru: 'üòï –ò–∑–≤–∏–Ω–∏—Ç–µ, —è —Ç—É—Ç –Ω–µ–º–Ω–æ–≥–æ –∑–∞–ø—É—Ç–∞–ª—Å—è. –ù–∞—á–Ω–∏—Ç–µ —Å –Ω–∞—á–∞–ª–∞.',
    be: 'üòï –í—ã–±–∞—á–∞–π—Ü–µ, —è —Ç—É—Ç –∫—Ä—ã—Ö—É –∑–∞–±–ª—ã—Ç–∞—û—Å—è. –ü–∞—á–Ω—ñ—Ü–µ –∑ –ø–∞—á–∞—Ç–∫—É.'
  },
  selectCurrency: {
    en: 'Select currency.',
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É.',
    be: '–í—ã–±—è—Ä—ã—Ü–µ –≤–∞–ª—é—Ç—É.'
  },
  selectLanguage: {
    en: 'Select language.',
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫.',
    be: '–í—ã–±—è—Ä—ã—Ü–µ –º–æ–≤—É.'
  },
  selectYear: {
    en: (year: number) => `${year} year has been selected...`,
    ru: (year: number) => `–ë—ã–ª –≤—ã–±—Ä–∞–Ω ${year} –≥–æ–¥...`,
    be: (year: number) => `–ë—ã—û –≤—ã–±—Ä–∞–Ω—ã ${year} –≥–æ–¥...`,
  } as ILocString,
  showSettings: {
    en: (employee: string, lang: Language, curr: string) => `Current settings:\n\tEmployee: ${employee}\n\tLanguage: ${lang}\n\tCurrency: ${curr}`,
    ru: (employee: string, lang: Language, curr: string) => `–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\t–°–æ—Ç—Ä—É–¥–Ω–∏–∫: ${employee}\n\t–Ø–∑—ã–∫: ${lang}\n\t–í–∞–ª—é—Ç–∞: ${curr}`,
    be: (employee: string, lang: Language, curr: string) => `–ë—è–≥—É—á—ã—è –Ω–∞—Å—Ç—Ä–æ–π–∫—ñ:\n\t–°—É–ø—Ä–∞—Ü–æ—û–Ω—ñ–∫: ${employee}\n\t–ú–æ–≤–∞: ${lang}\n\t–í–∞–ª—é—Ç–∞: ${curr}`
  } as ILocString,
  showSelectedDate: {
    en: (d: IDate) => `Selected month ${(d.month + 1).toString().padStart(2, '0')}.${d.year}`,
    ru: (d: IDate) => `–í—ã–±—Ä–∞–Ω –º–µ—Å—è—Ü ${(d.month + 1).toString().padStart(2, '0')}.${d.year}`,
    be: (d: IDate) => `–í—ã–±—Ä–∞–Ω—ã –º–µ—Å—è—Ü ${(d.month + 1).toString().padStart(2, '0')}.${d.year}`
  },
  todayBirthday: {
    en: 'Birthdays today',
    ru: '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è',
    be: '–î–Ω—ñ –Ω–∞—Ä–æ–¥–∑—ñ–Ω–∞—û —Å—ë–Ω–Ω—è',
  },
  tomorrowBirthday: {
    en: 'Birthdays tomorrow',
    ru: '–î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∑–∞–≤—Ç—Ä–∞',
    be: '–î–Ω—ñ –Ω–∞—Ä–æ–¥–∑—ñ–Ω–∞—û –∑–∞—û—Ç—Ä–∞',
  },
  noBirthdays: {
    en: 'No birthdays today and tomorrow',
    ru: '–°–µ–≥–æ–¥–Ω—è –∏ –∑–∞–≤—Ç—Ä–∞ –Ω–µ—Ç –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π',
    be: '–°—ë–Ω–Ω—è —ñ –∑–∞—û—Ç—Ä–∞ –Ω—è–º–∞ –¥–∑—ë–Ω –Ω–∞—Ä–æ–¥–∑—ñ–Ω–∞—û',
  },
  shortMonth0: {
    en: 'jan',
    ru: '—è–Ω–≤',
    be: '—Å—Ç—É'
  },
  shortMonth1: {
    en: 'feb',
    ru: '—Ñ–µ–≤',
    be: '–ª—é—Ç'
  },
  shortMonth2: {
    en: 'mar',
    ru: '–º–∞—Ä',
    be: '—Å–∞–∫'
  },
  shortMonth3: {
    en: 'apr',
    ru: '–∞–ø—Ä',
    be: '–∫—Ä–∞'
  },
  shortMonth4: {
    en: 'may',
    ru: '–º–∞–π',
    be: '—Ç—Ä–∞'
  },
  shortMonth5: {
    en: 'jun',
    ru: '–∏—é–Ω',
    be: '—á—ç—Ä'
  },
  shortMonth6: {
    en: 'jul',
    ru: '–∏—é–ª',
    be: '–ªi–ø'
  },
  shortMonth7: {
    en: 'aug',
    ru: '–∞–≤–≥',
    be: '–∂–Ωi'
  },
  shortMonth8: {
    en: 'sep',
    ru: '—Å–µ–Ω',
    be: '–≤–µ—Ä'
  },
  shortMonth9: {
    en: 'oct',
    ru: '–æ–∫—Ç',
    be: '–∫–∞—Å'
  },
  shortMonth10: {
    en: 'nov',
    ru: '–Ω–æ—è',
    be: '–ª—ñ—Å'
  },
  shortMonth11: {
    en: 'dec',
    ru: '–¥–µ–∫',
    be: '—Å–Ω–µ'
  },
  selectDB: {
    en: 'Select the date of the beginning of period.',
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞.',
    be: '–í—ã–±—è—Ä—ã—Ü–µ –¥–∞—Ç—É –ø–∞—á–∞—Ç–∫—É –ø–µ—Ä—ã—è–¥—É.'
  },
  selectDE: {
    en: 'Select the date of the ending of period.',
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞.',
    be: '–í—ã–±—è—Ä—ã—Ü–µ –¥–∞—Ç—É –∑–∞–∫–∞–Ω—á—ç–Ω–Ω—è –ø–µ—Ä—ã—è–¥—É.'
  },
  selectDB2: {
    en: 'Select the date of the beginning of second period.',
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.',
    be: '–í—ã–±—è—Ä—ã—Ü–µ –¥–∞—Ç—É –ø–∞—á–∞—Ç–∫—É –¥—Ä—É–≥–æ–≥–∞ –ø–µ—Ä—ã—è–¥—É.'
  },
  selectMonth: {
    en: 'Select month.',
    ru: '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü.',
    be: '–í—ã–±—è—Ä—ã—Ü–µ –º–µ—Å—è—Ü.'
  },
  menuPayslip: {
    en: 'üí∞ Payslip',
    ru: 'üí∞ –†–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: 'üí∞ –†–∞–∑–ª—ñ–∫–æ–≤—ã –ª—ñ—Å—Ç–æ–∫',
  },
  menuDetailedPayslip: {
    en: 'üîé Detailed payslip',
    ru: 'üîé –ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: 'üîé –ü–∞–¥—Ä–∞–±—è–∑–Ω—ã –ª—ñ—Å—Ç–æ–∫',
  },
  menuPayslipForPeriod: {
    en: 'üìÖ Payslip for period',
    ru: 'üìÖ –õ–∏—Å—Ç–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥',
    be: 'üìÖ –õ—ñ—Å—Ç–æ–∫ –∑–∞ –ø–µ—Ä—ã—è–¥',
  },
  menuComparePayslip: {
    en: '‚öñ Compare...',
    ru: '‚öñ –°—Ä–∞–≤–Ω–∏—Ç—å...',
    be: '‚öñ –ü–∞—Ä–∞—û–Ω–∞—Ü—å...'
  },
  menuSettings: {
    en: 'üõ† Settings...',
    ru: 'üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏...',
    be: 'üõ† –ù–∞—Å—Ç—Ä–æ–π–∫—ñ...',
  },
  menuLogout: {
    en: 'üö™ Logout',
    ru: 'üö™ –í—ã–π—Ç–∏',
    be: 'üö™ –í—ã–π—Å—Ü—ñ'
  },
  menuWage: {
    en: 'üí∞ Wage...',
    ru: 'üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞...',
    be: 'üí∞ –ó–∞—Ä–æ–±–∞–∫...',
  },
  menuOther: {
    en: 'üöÄ Other...',
    ru: 'üöÄ –î—Ä—É–≥–æ–µ...',
    be: 'üöÄ –Ü–Ω—à–∞–µ...',
  },
  menuSchedule: {
    en: '‚è≥ Working schedule',
    ru: '‚è≥ –ì—Ä–∞—Ñ–∏–∫',
    be: '‚è≥ –ì—Ä–∞—Ñ—ñ–∫',
  },
  menuTable: {
    en: 'üìÖ Time sheet',
    ru: 'üìÖ –¢–∞–±–µ–ª—å',
    be: 'üìÖ –¢–∞–±–µ–ª—å',
  },
  menuBirthdays: {
    en: 'üéÇ Birthdays',
    ru: 'üéÇ –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è',
    be: 'üéÇ –î–Ω—ñ –Ω–∞—Ä–æ–¥–∑—ñ–Ω–∞—û',
  },
  menuRates: {
    en: 'üí≤ Currency rates',
    ru: 'üí≤ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç',
    be: 'üí≤ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç–∞—û',
  },
  menuBillboard: {
    en: 'üì¢ Billboard',
    ru: 'üì¢ –î–æ—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π',
    be: 'üì¢ –î–æ—à–∫–∞ –∞–±\'—è—û',
  },
  menuHelp: {
    en: '‚ùì',
    ru: '‚ùì',
    be: '‚ùì'
  },
  menuSelectLanguage: {
    en: 'Select language',
    ru: '–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫',
    be: '–í—ã–±—Ä–∞—Ü—å –º–æ–≤—É'
  },
  menuSelectCurrency: {
    en: 'Select currency',
    ru: '–í—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É',
    be: '–í—ã–±—Ä–∞—Ü—å –≤–∞–ª—é—Ç—É'
  },
  languageRU: {
    en: 'Russian',
    ru: '–†—É—Å—Å–∫–∏–π',
    be: '–†—É—Å–∫–∞—è'
  },
  languageBE: {
    en: 'Belarusian',
    ru: '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π',
    be: '–ë–µ–ª–∞—Ä—É—Å–∫–∞—è'
  },
  languageEN: {
    en: 'English',
    ru: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
    be: '–ê–Ω–≥–µ–ª—å—Å–∫–∞—è'
  },
  currencyBYN: {
    en: 'BYN',
    ru: '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å',
    be: '–ë–µ–ª–∞—Ä—É—Å–∫—ñ —Ä—É–±–µ–ª—å'
  },
  currencyUSD: {
    en: 'USD',
    ru: '–î–æ–ª–ª–∞—Ä –°–®–ê',
    be: '–î–∞–ª—è—Ä –ó–®–ê'
  },
  currencyEUR: {
    en: 'EUR',
    ru: '–ï–≤—Ä–æ',
    be: '–≠—û—Ä–∞'
  },
  currencyRUR: {
    en: 'RUR',
    ru: '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å',
    be: '–†–∞—Å–µ–π—Å–∫—ñ —Ä—É–±–µ–ª—å'
  },
  currencyPLN: {
    en: 'PLN',
    ru: '–ü–æ–ª—å—Å–∫–∏–π –∑–ª–æ—Ç—ã–π',
    be: '–ü–æ–ª—å—Å–∫—ñ –∑–ª–æ—Ç—ã'
  },
  currencyUAH: {
    en: 'UAH',
    ru: '–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è –≥—Ä–∏–≤–Ω–∞',
    be: '–£–∫—Ä–∞—ñ–Ω—Å–∫–∞—è –≥—Ä—ã—û–Ω–∞'
  },
  btnPrevYear: {
    en: null,
    ru: ' < ',
    be: null
  },
  btnNextYear: {
    en: null,
    ru: ' > ',
    be: null
  },
  btnBackToMenu: {
    en: 'Back to main menu...',
    ru: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...',
    be: '–í—è—Ä–Ω—É—Ü—Ü–∞ —û –≥–∞–ª–æ—û–Ω–∞–µ –º–µ–Ω—é...'
  },
  btnBackToSettingsMenu: {
    en: 'Back to settings menu...',
    ru: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫...',
    be: '–í—è—Ä–Ω—É—Ü—Ü–∞ —û –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫...'
  },
  cantLoadRate: {
    en: (currencyId: string) => `Unable to load currency rate for ${currencyId}.`,
    ru: (currencyId: string) => `–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã ${currencyId}.`,
    be: (currencyId: string) => `–ù–µ–º–∞–≥—á—ã–º–∞ –∑–∞–≥—Ä—É–∑—ñ—Ü—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã ${currencyId}.`
  } as ILocString,
  ratesForMonth: {
    en: (currencyId: string, date: IDate) => `Currency rate for ${new Date(date.year, date.month).toLocaleString('en', {month: 'long'})} ${date.year},\nFor one ${currencyId} in rubles:\n`,
    ru: (currencyId: string, date: IDate) => `–ö—É—Ä—Å –≤–∞–ª—é—Ç—ã –∑–∞ ${new Date(date.year, date.month).toLocaleString('ru', {month: 'long'})} ${date.year},\n–∑–∞ –æ–¥–∏–Ω ${currencyId} –≤ —Ä—É–±–ª—è—Ö:\n`,
    be: (currencyId: string, date: IDate) => `–ö—É—Ä—Å –≤–∞–ª—é—Ç—ã –∑–∞ ${new Date(date.year, date.month).toLocaleString('be', {month: 'long'})} ${date.year},\n–∑–∞ –∞–¥–∑—ñ–Ω ${currencyId} —É —Ä—É–±–ª—è—Ö:\n`
  } as ILocString,
  payslipTitle: {
    en: 'Payslip',
    ru: '–†–∞—Å—á–µ—Ç–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: '–†–∞–∑–ª—ñ–∫–æ–≤—ã –ª—ñ—Å—Ç–æ–∫'
  },
  enterAnnouncementInvitation: {
    en: 'Enter text of the announcement:',
    ru: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è:',
    be: '–£–≤—è–¥–∑—ñ—Ü–µ —Ç—ç–∫—Å—Ç –∞–±\'—è–≤—ã:'
  },
  comparativePayslipTitle: {
    en: 'Comparative payslip',
    ru: '–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç–æ–∫',
    be: '–ü–∞—Ä–∞—û–Ω–∞–ª—å–Ω—ã –ª—ñ—Å—Ç–æ–∫'
  },
  hours: {
    en: 'h.',
    ru: '—á.',
    be: '–≥.'
  },
  days: {
    en: 'd.',
    ru: '–¥.',
    be: '–¥.'
  },
  payslipDepartment: {
    en: 'Department:',
    ru: '–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:',
    be: '–ü–∞–¥—Ä–∞–∑–¥–∑—è–ª–µ–Ω–Ω–µ:'
  },
  payslipPosition: {
    en: 'Position:',
    ru: '–î–æ–ª–∂–Ω–æ—Å—Ç—å:',
    be: '–ü–∞—Å–∞–¥–∞:'
  },
  payslipSalary: {
    en: 'Salary:',
    ru: '–û–∫–ª–∞–¥:',
    be: '–ê–∫–ª–∞–¥:'
  },
  payslipHpr: {
    en: 'H/R:',
    ru: '–ß–¢–°:',
    be: '–ü–¢–°:'
  },
  payslipAccrued: {
    en: 'Accrued:',
    ru: '–ù–∞—á–∏—Å–ª–µ–Ω–æ:',
    be: '–ù–∞–ª—ñ—á–∞–Ω–∞:'
  },
  payslipNetsalary: {
    en: 'Net salary:',
    ru: '–ó–∞—Ä–ø–ª–∞—Ç–∞ —á–∏—Å—Ç—ã–º–∏:',
    be: '–ó–∞—Ä–ø–ª–∞—Ç–∞ —á—ã—Å—Ç—ã–º—ñ:'
  },
  payslipDeductions: {
    en: '  Deductions:',
    ru: '  –£–¥–µ—Ä–∂–∞–Ω–∏—è:',
    be: '  –é—Ç—Ä—ã–º–∞–Ω–Ω—è:'
  },
  payslipAdvance: {
    en: '  Advance:',
    ru: '  –ê–≤–∞–Ω—Å:',
    be: '  –ê–≤–∞–Ω—Å:'
  },
  payslipPayroll: {
    en: '  Payable:',
    ru: '  –ö –≤—ã–¥–∞—á–µ:',
    be: '  –î–∞ –≤—ã–¥–∞—á—ã:'
  },
  payslipTaxes: {
    en: 'Taxes:',
    ru: '–ù–∞–ª–æ–≥–∏:',
    be: '–ü–∞–¥–∞—Ç–∫i:'
  },
  payslipIncometax: {
    en: '  Income tax:',
    ru: '  –ü–æ–¥–æ—Ö–æ–¥–Ω—ã–π:',
    be: '  –ü–∞–¥–∞—Ö–æ–¥–Ω—ã:'
  },
  payslipPensionTax: {
    en: '  Pension tax:',
    ru: '  –ü–µ–Ω—Å–∏–æ–Ω–Ω—ã–π:',
    be: '  –ü–µ–Ω—Å—ñ–π–Ω—ã:'
  },
  payslipTradeUnionTax: {
    en: '  Trade-union:',
    ru: '  –ü—Ä–æ—Ñ—Å–æ—é–∑–Ω—ã–π:',
    be: '  –ü—Ä–∞—Ñ—Å–∞—é–∑–Ω—ã:'
  },
  payslipPrivileges: {
    en: 'Privileges:',
    ru: '–õ—å–≥–æ—Ç—ã:',
    be: '–Ü–ª—å–≥–æ—Ç—ã:'
  },
  payslipDeductionsWOSpace: {
    en: 'Deductions:',
    ru: '–£–¥–µ—Ä–∂–∞–Ω–∏—è:',
    be: '–é—Ç—Ä—ã–º–∞–Ω–Ω—è:'
  },
  payslipAdvanceWOSpace: {
    en: 'Advance:',
    ru: '–ê–≤–∞–Ω—Å:',
    be: '–ê–≤–∞–Ω—Å:'
  },
  payslipTaxDeduction: {
    en: 'Tax deduction:',
    ru: '–í—ã—á–µ—Ç—ã:',
    be: '–í—ã–ªi–∫i:'
  },
  payslipPeriod: {
    en: 'Period: ',
    ru: '–ü–µ—Ä–∏–æ–¥: ',
    be: '–ü–µ—Ä—ã—è–¥: '
  },
  payslipCurrency: {
    en: (currency: string, currencyRate?: ICurrencyRate) => 'Currency: ' + (
      currencyRate
        ? `${currency}\nExchange rate ${currencyRate.rate.toFixed(2)} on ${date2str(currencyRate.date, 'DD.MM.YY')}`
        : 'Belarusian ruble'),
    ru: (currency: string, currencyRate?: ICurrencyRate) => '–í–∞–ª—é—Ç–∞: ' + (
      currencyRate
        ? `${currency}\n–ö—É—Ä—Å ${currencyRate.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate.date, 'DD.MM.YY')}`
        : '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å'),
    be: (currency: string, currencyRate?: ICurrencyRate) => '–í–∞–ª—é—Ç–∞: ' + (
      currencyRate
        ? `${currency}\n–ö—É—Ä—Å ${currencyRate.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate.date, 'DD.MM.YY')}`
        : '–ë–µ–ª–∞—Ä—É—Å–∫—ñ —Ä—É–±–µ–ª—å')
  },
  comparativePayslipCurrency: {
    en: (currency: string, currencyRate?: ICurrencyRate, currencyRate2?: ICurrencyRate) => 'Currency: ' + (
      currencyRate && currencyRate2
        ? `${currency}\nExchange rate ${currencyRate.rate.toFixed(2)} on ${date2str(currencyRate.date, 'DD.MM.YY')}\n${currencyRate2.rate.toFixed(2)} on ${date2str(currencyRate2.date, 'DD.MM.YY')}`
        : 'Belarusian ruble'),
    ru: (currency: string, currencyRate?: ICurrencyRate, currencyRate2?: ICurrencyRate) => '–í–∞–ª—é—Ç–∞: ' + (
      currencyRate && currencyRate2
        ? `${currency}\n–ö—É—Ä—Å ${currencyRate.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate.date, 'DD.MM.YY')}\n${currencyRate2.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate2.date, 'DD.MM.YY')}`
        : '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å'),
    be: (currency: string, currencyRate?: ICurrencyRate, currencyRate2?: ICurrencyRate) => '–í–∞–ª—é—Ç–∞: ' + (
      currencyRate && currencyRate2
        ? `${currency}\n–ö—É—Ä—Å ${currencyRate.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate.date, 'DD.MM.YY')}\n${currencyRate2.rate.toFixed(2)} –Ω–∞ ${date2str(currencyRate2.date, 'DD.MM.YY')}`
        : '–ë–µ–ª–∞—Ä—É—Å–∫—ñ —Ä—É–±–µ–ª—å')
  },
  comparativePayslipPeriod: {
    en: (db: IDate, de: IDate, db2: IDate, de2: IDate) => 'Period:\n' + (de.year !== db.year || de.month !== db.month
        ? `${db.month + 1}.${db.year}-${de.month + 1}.${de.year}`
        : `${new Date(db.year, db.month).toLocaleDateString('en', { month: 'long', year: 'numeric' })}`
      ) + ' to ' + (de2.year !== db2.year || de2.month !== db2.month
        ? `${db2.month + 1}.${db2.year}-${de2.month + 1}.${de2.year}`
        : `${new Date(db2.year, db2.month).toLocaleDateString('en', { month: 'long', year: 'numeric' })}`
      ),
    ru: (db: IDate, de: IDate, db2: IDate, de2: IDate) => '–ü–µ—Ä–∏–æ–¥:\n' + (de.year !== db.year || de.month !== db.month
        ? `${db.month + 1}.${db.year}-${de.month + 1}.${de.year}`
        : `${new Date(db.year, db.month).toLocaleDateString('ru', { month: 'long', year: 'numeric' })}`
      ) + ' –∫ ' + (de2.year !== db2.year || de2.month !== db2.month
        ? `${db2.month + 1}.${db2.year}-${de2.month + 1}.${de2.year}`
        : `${new Date(db2.year, db2.month).toLocaleDateString('ru', { month: 'long', year: 'numeric' })}`
      ),
    be:(db: IDate, de: IDate, db2: IDate, de2: IDate) => '–ü–µ—Ä—ã—è–¥:\n' + (de.year !== db.year || de.month !== db.month
        ? `${db.month + 1}.${db.year}-${de.month + 1}.${de.year}`
        : `${new Date(db.year, db.month).toLocaleDateString('be', { month: 'long', year: 'numeric' })}`
      ) + ' –¥–∞ ' + (de2.year !== db2.year || de2.month !== db2.month
        ? `${db2.month + 1}.${db2.year}-${de2.month + 1}.${de2.year}`
        : `${new Date(db2.year, db2.month).toLocaleDateString('be', { month: 'long', year: 'numeric' })}`
      )
  }
};

export type Language = keyof ILocString;
export type StringResource = keyof typeof stringResources;

export const getLocString = (r: ILocString, lang: Language, ...args: any[]) => {
  const sr = r[lang]
    ?? r['ru']
    ?? r['be']
    ?? r['en'];

  if (typeof sr === 'function') {
    return sr(...args);
  }
  else if (sr === null) {
    throw new Error(`String resource isn't defined for a given lanuage.`)
  } else {
    return sr;
  }
};

export const str2Language = (s?: string): Language => {
  switch (s?.toLowerCase()) {
    case 'be': return 'be';
    case 'en': return 'en';
  default:
    return 'ru';
  }
};

export interface ITName {
  name: string;
  fullName?: string;
};

export type LName = {
  [lang in Language]?: ITName;
};

export function getLName(n: LName, langPref: Language[] = [], getFullName: boolean = false): string {
  for (let i = 0; i < langPref.length; i++) {
    const tn = n[langPref[i]];
    if (tn) {
      return (getFullName && tn.fullName) ? tn.fullName : tn.name;
    }
  }

  return (
    (getFullName ? n.ru?.fullName : undefined) ?? n.ru?.name ??
    (getFullName ? n.be?.fullName : undefined) ?? n.be?.name ??
    (getFullName ? n.en?.fullName : undefined) ?? n.en?.name ??
    ''
  );
};
